{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"A Modern Doc Template for your Python Project \ud83d\udc85 This website was build with: mkdocs.org mkdocs-material pymdown In addition, we integrated the amazing terminal widget from FastApi Getting Started Head over the getting started guide Features Code Highlights See here for doc print ( \"Hello World!\" ) Admonition See here for doc Hello There General Kenobi! Hello There General Kenobi! Error Boom! Latex See here for doc Inline \\(p(x|y) = \\frac{p(y|x)p(x)}{p(y)}\\) , \\(p(x|y) = \\frac{p(y|x)p(x)}{p(y)}\\) . Block \\[ E(\\mathbf{v}, \\mathbf{h}) = -\\sum_{i,j}w_{ij}v_i h_j - \\sum_i b_i v_i - \\sum_j c_j h_j \\] \\[\\begin{align} p(v_i=1|\\mathbf{h}) & = \\sigma\\left(\\sum_j w_{ij}h_j + b_i\\right) \\\\ p(h_j=1|\\mathbf{v}) & = \\sigma\\left(\\sum_i w_{ij}v_i + c_j\\right) \\end{align}\\]","title":"Docs"},{"location":"#a-modern-doc-template-for-your-python-project","text":"This website was build with: mkdocs.org mkdocs-material pymdown In addition, we integrated the amazing terminal widget from FastApi","title":"A Modern Doc Template for your Python Project \ud83d\udc85"},{"location":"#getting-started","text":"Head over the getting started guide","title":"Getting Started"},{"location":"#features","text":"","title":"Features"},{"location":"#code-highlights","text":"See here for doc print ( \"Hello World!\" )","title":"Code Highlights"},{"location":"#admonition","text":"See here for doc Hello There General Kenobi! Hello There General Kenobi! Error Boom!","title":"Admonition"},{"location":"#latex","text":"See here for doc Inline \\(p(x|y) = \\frac{p(y|x)p(x)}{p(y)}\\) , \\(p(x|y) = \\frac{p(y|x)p(x)}{p(y)}\\) . Block \\[ E(\\mathbf{v}, \\mathbf{h}) = -\\sum_{i,j}w_{ij}v_i h_j - \\sum_i b_i v_i - \\sum_j c_j h_j \\] \\[\\begin{align} p(v_i=1|\\mathbf{h}) & = \\sigma\\left(\\sum_j w_{ij}h_j + b_i\\right) \\\\ p(h_j=1|\\mathbf{v}) & = \\sigma\\left(\\sum_i w_{ij}v_i + c_j\\right) \\end{align}\\]","title":"Latex"},{"location":"ci_cd/","text":"GitHub Action In order to automatically push your doc on github pages you need to create a new branch called gh-pages git checkout -b gh-pages git push --set-upstream origin gh-pages Then head over the Settings in your repo and select the right branch and folder under the pages section.","title":"Ci cd"},{"location":"ci_cd/#github-action","text":"In order to automatically push your doc on github pages you need to create a new branch called gh-pages git checkout -b gh-pages git push --set-upstream origin gh-pages Then head over the Settings in your repo and select the right branch and folder under the pages section.","title":"GitHub Action"},{"location":"code/","text":"def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ]","title":"Code"},{"location":"getting_started/","text":"Clone my repo Clone my repo $ git clone git@github.com:FrancescoSaverioZuppichini/Modern-Python-Doc-Example.git && cd Modern-Python-Doc-Example Then you can start mkdocs with the following command $ mkdocs serve -w INFO - Building documentation... INFO - Cleaning site directory INFO - Documentation built in 0.23 seconds INFO - [11:11:17] Watching paths for changes: 'docs', 'mkdocs.yml', '.' INFO - [11:11:17] Serving on http://localhost:8000/ Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Getting Started"},{"location":"getting_started/#clone-my-repo","text":"Clone my repo $ git clone git@github.com:FrancescoSaverioZuppichini/Modern-Python-Doc-Example.git && cd Modern-Python-Doc-Example Then you can start mkdocs with the following command $ mkdocs serve -w INFO - Building documentation... INFO - Cleaning site directory INFO - Documentation built in 0.23 seconds INFO - [11:11:17] Watching paths for changes: 'docs', 'mkdocs.yml', '.' INFO - [11:11:17] Serving on http://localhost:8000/","title":"Clone my repo"},{"location":"getting_started/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"getting_started/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"math/","text":"Inline \\(p(x|y) = \\frac{p(y|x)p(x)}{p(y)}\\) , \\(p(x|y) = \\frac{p(y|x)p(x)}{p(y)}\\) . Block \\[ E(\\mathbf{v}, \\mathbf{h}) = -\\sum_{i,j}w_{ij}v_i h_j - \\sum_i b_i v_i - \\sum_j c_j h_j \\] \\[\\begin{align} p(v_i=1|\\mathbf{h}) & = \\sigma\\left(\\sum_j w_{ij}h_j + b_i\\right) \\\\ p(h_j=1|\\mathbf{v}) & = \\sigma\\left(\\sum_i w_{ij}v_i + c_j\\right) \\end{align}\\]","title":"Math"},{"location":"terminal/","text":"$ echo \"Hello World\" Hello World","title":"Terminal"},{"location":"reference/","text":"","title":"Index"},{"location":"reference/SUMMARY/","text":"src project example","title":"SUMMARY"},{"location":"reference/project/example/","text":"foo ( param1 , param2 ) An example function Parameters: Name Type Description Default param1 int a parameter. required param2 List[int] an other parameter. required Returns: Type Description bool something. Source code in src/project/example.py def foo ( param1 : int , param2 : List [ int ]) -> bool : \"\"\" An example function Args: param1 (int): a parameter. param2 (List[int]): an other parameter. Returns: bool: something. \"\"\" return True","title":"example"},{"location":"reference/project/example/#src.project.example.foo","text":"An example function Parameters: Name Type Description Default param1 int a parameter. required param2 List[int] an other parameter. required Returns: Type Description bool something. Source code in src/project/example.py def foo ( param1 : int , param2 : List [ int ]) -> bool : \"\"\" An example function Args: param1 (int): a parameter. param2 (List[int]): an other parameter. Returns: bool: something. \"\"\" return True","title":"foo()"}]}